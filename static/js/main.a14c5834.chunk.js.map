{"version":3,"sources":["components/ColorPicker/ColorPicker.module.css","components/Alert/Alert.module.css","components/Container/Container.module.css","components/ColorPicker/ColorPicker.js","components/Alert/Alert.js","components/Container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ColorPicker","options","className","s","container","title","map","option","style","backgroundColor","color","label","console","log","Alert","text","type","role","Container","children","App","colorPickerOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,OAAS,8B,iBCAzGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,wCAAwC,QAAU,0CAA0C,QAAU,4C,gBCA7JD,EAAOC,QAAU,CAAC,UAAY,+B,+HCiBfC,MAhBf,YAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,0BACA,8BACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,sBAEEL,UAAWC,IAAEI,OACbC,MAAO,CAAEC,gBAAiBF,EAAOG,QAF5BH,EAAOI,gB,gBCPxBC,QAAQC,IAAIV,KAcGW,MAZf,YAAgC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAErB,OACE,mBAAGC,KAAK,QAAQf,UAAWC,IAAEa,GAA7B,SACGD,K,gBCPPH,QAAQC,IAAIV,KAKGe,MAHf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKjB,UAAWC,IAAEC,UAAlB,SAA8Be,KCaxBC,MAbf,WACE,OACE,8BACG,eAAC,EAAD,WACC,cAAC,EAAD,CAAanB,QAAWoB,IACxB,cAAC,EAAD,CAAON,KAAK,wFAAuBC,KAAK,UACxC,cAAC,EAAD,CAAOD,KAAK,wFAAuBC,KAAK,YACxC,cAAC,EAAD,CAAOD,KAAK,wFAAuBC,KAAK,kBAQ1CK,EAAqB,CACzB,CAAEV,MAAM,MAAOD,MAAO,WACtB,CAAEC,MAAM,QAASD,MAAO,WACxB,CAAEC,MAAM,OAAQD,MAAO,WACvB,CAAEC,MAAM,OAAQD,MAAO,WACvB,CAAEC,MAAM,OAAQD,MAAO,WACvB,CAAEC,MAAM,SAAUD,MAAO,YCbZY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a14c5834.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__3qMh-\",\"title\":\"ColorPicker_title__3BD9t\",\"option\":\"ColorPicker_option__39yi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1xcpI\",\"error\":\"Alert_error__3_QVt Alert_alert__1xcpI\",\"warning\":\"Alert_warning__1Tbpa Alert_alert__1xcpI\",\"success\":\"Alert_success__1dwEp Alert_alert__1xcpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2tZr4\"};","import s from './ColorPicker.module.css';\n// console.log(s);\nfunction ColorPicker({ options }) {\n  return (\n    <div className={s.container}>\n      <h2 className={s.title}>Color Picker</h2>\n      <div>\n        {options.map(option => (\n          <span\n            key={option.label}\n            className={s.option}\n            style={{ backgroundColor: option.color }}\n          ></span>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default ColorPicker;\n","import PropTypes from 'prop-types';\nimport s from './Alert.module.css';\nconsole.log(s);\n\nfunction Alert({ text, type }) {\n  // const typeClass = type ? `s.alert` : '';\n  return (\n    <p role=\"alert\" className={s[type]}>\n      {text}\n    </p>\n  );\n}\nAlert.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['success', 'warning', 'error']).isRequired,\n};\nexport default Alert;\n","import s from './Container.module.css';\nconsole.log(s);\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\nexport default Container;\n","import ColorPicker from './components/ColorPicker/ColorPicker'\nimport Alert from './components/Alert/Alert';\nimport Container from \"./components/Container/Container\"\n\nfunction App() {\n  return (\n    <div>\n       <Container> \n        <ColorPicker options = {colorPickerOptions}/> \n        <Alert text=\"В тебе все вийде!!!!\" type='error'/>\n        <Alert text=\"В тебе все вийде!!!!\" type='success'/>\n        <Alert text=\"В тебе все вийде!!!!\" type='warning'/> \n      </Container> \n    </div>\n  );\n}\n\nexport default App;\n\nconst colorPickerOptions = [\n  { label:'red', color: '#F44336'},\n  { label:'green', color: '#4CAF50'},\n  { label:'blue', color: '#2196F3'},\n  { label:'grey', color: '#607D8B'},\n  { label:'pink', color: '#E91E63'},\n  { label:'indigo', color: '#3F51B5'}\n]\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}